{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/index.ts","webpack:///./src/app/register-user/register-user.component.css","webpack:///./src/app/register-user/register-user.component.html","webpack:///./src/app/register-user/register-user.component.ts","webpack:///./src/app/registeration-overview/registeration-overview.component.css","webpack:///./src/app/registeration-overview/registeration-overview.component.html","webpack:///./src/app/registeration-overview/registeration-overview.component.ts","webpack:///./src/app/services/event.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/polyfills.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n\\n      <div *ngIf=\\\"Events && Events.length > 0\\\">\\n        <h2 class=\\\"py-2\\\">{{mainTitle}}</h2>\\n        <hr>\\n        <div class=\\\"row card-group\\\">\\n            <div class=\\\"col-sm-6 py-2 d-flex align-items-stretch\\\" *ngFor=\\\"let Event of Events\\\">\\n                <div class=\\\"card text-center\\\">\\n                    <div class=\\\"card-header\\\">\\n                        <h5 class=\\\"float-left\\\">{{Event.name}}</h5> <span class=\\\"float-right\\\"><i (click)=\\\"registerationOverview(Event)\\\" class=\\\"fa fa-info-circle\\\"></i></span>\\n                    </div>\\n                    <div class=\\\"card-body h-100\\\">\\n                        <p class=\\\"card-text p-4\\\">{{Event.description}}</p>\\n                    </div>\\n                    <div class=\\\"card-footer text-muted\\\">\\n                        <button class=\\\"btn btn-primary\\\" (click)=\\\"registerUser(Event)\\\">Tilmeld</button>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { EventService } from './services/event.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { RegisterUserComponent } from './register-user/register-user.component';\nimport { RegisterationOverviewComponent } from './registeration-overview/registeration-overview.component';\n\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [EventService],\n})\n\nexport class AppComponent {\n\n  mainTitle = 'Registreringer for arrangementer';\n  title: string;\n  id: number;\n  Events: any;\n  validTitle = true;\n  last_page: any;\n  _last_page: number;\n  current_page: number;\n  total_Events: number;\n  per_page: number;\n  disablePrev: boolean;\n  disableNext: boolean;\n  inputFocused: boolean;\n  isInEdit: boolean;\n  index: number;\n\n\n  constructor(private _eventService: EventService, private _modalService: NgbModal) {\n    this.onLoad();\n    this.inputFocused = false;\n    this.index = 0;\n  }\n\n\n\n  onLoad() {\n    var result = this._eventService.getEvents();\n    result.subscribe((data) => {\n      this.last_page = Array(data.last_page);\n      this._last_page = data.last_page;\n      this.current_page = data.current_page;\n      this.per_page = data.per_page;\n      this.Events = data.data;\n      this.disableNext = true;\n      this.disablePrev = false;\n      this.total_Events = data.total;\n\n    });\n\n  }\n  registerUser(Event) {\n    const modal =  this._modalService.open(RegisterUserComponent);\n    modal.componentInstance.Event = Event;\n  }\n\n   registerationOverview(Event) {\n    const modal =  this._modalService.open(RegisterationOverviewComponent);\n    modal.componentInstance.Event = Event;\n  }\n\n  pageNumber(_number) {\n    this.current_page = _number;\n    if (this.current_page == 1) {\n        this.disablePrev = false;\n        this.disableNext = true;\n    } else if (this.current_page == this._last_page) {\n        this.disableNext = false;\n        this.disablePrev = true;\n    } else {\n        this.disablePrev = true;\n        this.disableNext = true;\n    }\n    var result = this._eventService.getMoreEvents(this.current_page);\n    result.subscribe((data) => {\n        this.Events = data.data;\n        });\n\n  }\n\n\n\n\n\n\n\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { RegisterUserComponent } from './register-user/register-user.component';\nimport { RegisterationOverviewComponent } from './registeration-overview/registeration-overview.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterUserComponent,\n    RegisterationOverviewComponent\n  ],\n  imports: [\n    NgbModule.forRoot(),\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    ReactiveFormsModule\n  ],\n  entryComponents: [RegisterUserComponent, RegisterationOverviewComponent],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export * from './app.component';\nexport * from './app.module';\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Tilmeld bruger</h4>  \\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"closeUserRegisterModal()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <ngb-alert *ngIf=\\\"successMessage\\\" type=\\\"success\\\" [dismissible]=\\\"false\\\">{{ successMessageText }}</ngb-alert>\\n    <ngb-alert *ngIf=\\\"errorMessage\\\" type=\\\"warning\\\" [dismissible]=\\\"false\\\">{{ errorMessageText }}</ngb-alert>\\n\\n    <form [formGroup] = \\\"formdata\\\" (ngSubmit) = \\\"onClickSubmit(formdata.value)\\\" >\\n         <div class=\\\"form-group\\\">\\n             <input class=\\\"form-control\\\" type = \\\"text\\\" name = \\\"fullname\\\" placeholder = \\\"Fulde navn (mindst to bogstaver)\\\" formControlName = \\\"fullname\\\" />\\n         </div>\\n         <div class=\\\"form-group\\\">\\n             <input class=\\\"form-control\\\" type = \\\"text\\\" name = \\\"email\\\" placeholder = \\\"Email (skal være gyldig)\\\" formControlName = \\\"email\\\" />\\n         </div>\\n         <div class=\\\"form-group\\\">\\n             <input class=\\\"form-control\\\" type = \\\"text\\\" name = \\\"phone\\\" placeholder = \\\"Telefon nummer\\\" formControlName = \\\"phone\\\" />\\n         </div>\\n      <br/>\\n      <input class=\\\"btn btn-primary\\\" type = \\\"submit\\\" [disabled] = \\\"!formdata.valid\\\" value = \\\"Tilmeld\\\" />\\n      \\n   </form>\\n\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\nimport { EventService } from '../services/event.service';\n\n@Component({\n  selector: 'app-register-user',\n  templateUrl: './register-user.component.html',\n  styleUrls: ['./register-user.component.css'],\n  providers: [EventService]\n})\nexport class RegisterUserComponent implements OnInit {\n\n  constructor(public _eventService: EventService, public activeModal: NgbActiveModal) {}\n  eventId: number;\n  fullname: string;\n  email;\n  phone;\n  formdata;\n  Events: any;\n  successMessage: boolean;\n  errorMessage: boolean;\n  successMessageText: string;\n  errorMessageText: string;\n  @Input() Event;\n\n\n  ngOnInit() {\n      this.formdata = new FormGroup({\n         fullname: new FormControl(\"\", Validators.compose([\n            Validators.required,\n            Validators.minLength(2)\n         ])),\n         email: new FormControl(\"\", Validators.compose([\n            Validators.required,\n            Validators.pattern(\"[^ @]*@[^ @]*\")\n         ])),\n         phone: new FormControl(\"\")\n      });\n      this.successMessage = false;\n      this.errorMessage = false;\n  }\n\n  closeUserRegisterModal()\n  {\n    this.activeModal.close();\n  }\n\n\n  onClickSubmit(userData) {\n    this.successMessage = false;\n    this.errorMessage = false;\n    userData.eventid = this.Event.id; \n    let result = this._eventService.saveUser(userData);\n        result.subscribe((data) => {\n            if (data.success === \"true\"){\n                this.successMessage = true;\n                this.successMessageText = \"Success, vi har modtaget tilmelding\";\n                setTimeout (() => {\n                    this.activeModal.close();\n                }, 3000);\n            } else {\n                this.errorMessage = true;\n                this.errorMessageText = data.msg;\n            }\n\n\n        },\n      (errorData) => {\n\n      });\n  }\n\n}\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Oversigt</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"closeRegistrationOverviewModal()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <h6 class=\\\"py-2\\\">Antal deltagere: <span class=\\\"text-muted\\\">{{totalRegistrations}}</span></h6>\\n    <div *ngIf=\\\"Registrations && Registrations.length > 0\\\">\\n        <h6 class=\\\"py-2\\\">Følgende deltagere er registreret</h6>\\n        <table class=\\\"table table-striped\\\">\\n            <thead>\\n                <tr>\\n                    <th scope=\\\"col\\\">#</th>\\n                    <th scope=\\\"col\\\">Fulde navn</th>\\n                    <th scope=\\\"col\\\">Email</th>\\n                    <th scope=\\\"col\\\">Telefon nummer</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let Participant of Registrations; let i = index\\\">\\n                    <th scope=\\\"row\\\">{{i+1}}</th>\\n                    <td>{{Participant.fullname}}</td>\\n                    <td>{{Participant.email}}</td>\\n                    <td>{{Participant.phone}}</td>\\n                </tr>\\n\\n            </tbody>\\n        </table>\\n\\n      </div>\\n\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { EventService } from '../services/event.service';\n\n@Component({\n  selector: 'app-registeration-overview',\n  templateUrl: './registeration-overview.component.html',\n  styleUrls: ['./registeration-overview.component.css'],\n  providers: [EventService]\n})\nexport class RegisterationOverviewComponent implements OnInit {\n\n  constructor(public _eventService: EventService, public activeModal: NgbActiveModal) {}\n  totalRegistrations: number;\n  Events: any;\n  Registrations: any;\n  successMessage: boolean;\n  errorMessage: boolean;\n  successMessageText: string;\n  errorMessageText: string;\n  @Input() Event;\n\n  ngOnInit() {\n    var result = this._eventService.getRegistrationsOverview(this.Event);\n    result.subscribe((data) => {\n        this.Registrations = data;\n        this.totalRegistrations = data.length;\n\n    });\n  }\n\n   closeRegistrationOverviewModal()\n  {\n    this.activeModal.close();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport { Component } from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class EventService{\n\n  constructor(private _http: Http){\n    console.log(\"Service is ready!\");\n\n  }\n  closeResult: string;\n\n  //retrieve all available events\n  getEvents(){\n    return this._http\n               .get(\"http://35.162.97.188/api/events\", {})\n               .map(res => res.json())\n  }\n\n  saveUser(userData){\n    var headers = new Headers();\n    headers.append('Content-type','application/json');\n    return this._http\n               .post('http://35.162.97.188/api/register-user', JSON.stringify(userData),{headers:headers})\n               .map(res => res.json())\n  }\n\n  getRegistrationsOverview(Event){\n    return this._http\n               .get(\"http://35.162.97.188/api/registrations-overview/\"+Event.id, {})\n               .map(res => res.json())\n  }\n  getMoreEvents(id){\n    return this._http\n                .get('/api/events?page='+ id)\n                .map(res => res.json())\n  }\n\n\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import './polyfills.ts';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n"],"sourceRoot":""}